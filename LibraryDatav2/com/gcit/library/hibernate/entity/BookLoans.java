package com.gcit.library.hibernate.entity;

// Generated Sep 27, 2013 2:05:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BookLoans generated by hbm2java
 */
@Entity
@Table(name = "book_loans", catalog = "library")
public class BookLoans implements java.io.Serializable {

	private BookLoansId id;
	private Borrower borrower;
	private LibraryBranch libraryBranch;
	private Book book;
	private Date dateOut;
	private Date dueDate;

	public BookLoans() {
	}

	public BookLoans(BookLoansId id, Borrower borrower,
			LibraryBranch libraryBranch, Book book) {
		this.id = id;
		this.borrower = borrower;
		this.libraryBranch = libraryBranch;
		this.book = book;
	}

	public BookLoans(BookLoansId id, Borrower borrower,
			LibraryBranch libraryBranch, Book book, Date dateOut, Date dueDate) {
		this.id = id;
		this.borrower = borrower;
		this.libraryBranch = libraryBranch;
		this.book = book;
		this.dateOut = dateOut;
		this.dueDate = dueDate;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "bookId", column = @Column(name = "BookId", nullable = false)),
			@AttributeOverride(name = "branchId", column = @Column(name = "BranchId", nullable = false)),
			@AttributeOverride(name = "cardNo", column = @Column(name = "CardNo", nullable = false)) })
	public BookLoansId getId() {
		return this.id;
	}

	public void setId(BookLoansId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CardNo", nullable = false, insertable = false, updatable = false)
	public Borrower getBorrower() {
		return this.borrower;
	}

	public void setBorrower(Borrower borrower) {
		this.borrower = borrower;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BranchId", nullable = false, insertable = false, updatable = false)
	public LibraryBranch getLibraryBranch() {
		return this.libraryBranch;
	}

	public void setLibraryBranch(LibraryBranch libraryBranch) {
		this.libraryBranch = libraryBranch;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BookId", nullable = false, insertable = false, updatable = false)
	public Book getBook() {
		return this.book;
	}

	public void setBook(Book book) {
		this.book = book;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DateOut", length = 10)
	public Date getDateOut() {
		return this.dateOut;
	}

	public void setDateOut(Date dateOut) {
		this.dateOut = dateOut;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DueDate", length = 10)
	public Date getDueDate() {
		return this.dueDate;
	}

	public void setDueDate(Date dueDate) {
		this.dueDate = dueDate;
	}

}
